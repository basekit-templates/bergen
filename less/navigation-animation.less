//  Feature / Navigation Perspective Effect
// -------------------------------------------

// Makes sure the feature / navigation are full height and width
html, 
body, 
.perspective {
	height: 100%;
	width: 100%;
}

// Background for the perspective effect
.perspective {
	background: #f4f3f1;
	position: relative;

	// Adds perspective effect to feature
	&.modalview {
		-webkit-perspective: 1800px;
		perspective: 1800px;
	}
}

// Container for the feature / navigation and header elements
.feature-container {
	background: #fff;
	box-shadow: 0px 0px 150px 0px rgba(0,0,0,0.15);
	outline: 1px solid rgba(0,0,0,0);

	min-height: 100%;
	position: relative;
	z-index: 10;

	.transform(translateZ(0) translateX(0) rotateY(0deg));

	//-webkit-transform: translateZ(0) translateX(0) rotateY(0deg); /* reset transforms (Chrome bug) */
	//transform: translateZ(0) translateX(0) rotateY(0deg);

	&:before {
		content: "BACK";
	    position: fixed;
	    top: 50%;
	    right: 0;
	    color: red;
	    webkit-transform: translateX(-50%) rotateY(28deg) translateZ(15px);
	    transform: translateX(-50%) rotateY(28deg) translateZ(15px);
	    z-index: 999;

	    opacity: 0;
	    height: 0;
	}

	&:after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 0;
		opacity: 0;
		background: rgba(0,0,0,0.2);

		/* The transition delay of the height needs to be synced with the container transition time */
		.transition(opacity 0.4s, height 0s 0.4s);
		//-webkit-transition: opacity 0.4s, height 0s 0.4s;
		//transition: opacity 0.4s, height 0s 0.4s;
	}
}

// redundant?
/*.component {
	margin: 0 auto;
	width: 60%;
	text-align: justify;
	font-size: 1.5em;
}*/

.modalview.animate {
	.feature-container {
		position: absolute;
		overflow: hidden;
		width: 100%;
		height: 100%;
		cursor: pointer;
		-webkit-backface-visibility: hidden;
		backface-visibility: hidden;

		&:after,
		&:before {
			opacity: 1;
			height: 100%;
			.transition(opacity 0.3s);
		}
	}

	.feature-wrapper {
		//-webkit-transform: translateZ(-1px); /* solves a rendering bug in Chrome on Windows */
		.transform(translateZ(-1px));
	}
}

/* Effect Move Left */

.nav-right .feature-container {
	-webkit-transition: -webkit-transform 0.4s;
	transition: transform 0.4s;
	-webkit-transform-origin: 50% 50%;
	transform-origin: 50% 50%;
}

// add indicator that this closes navigation
.nav-right .feature-container:after {
	background: rgba(255,255,255,0.6);
}


// Moves featureoff canvas to display navigation
.nav-right.animate .feature-container {
	-webkit-transform: translateX(-50%) rotateY(28deg) translateZ(15px);
	transform: translateX(-50%) rotateY(28deg) translateZ(15px);

	@media @tablet-860px {
		-webkit-transform: translateX(-55%) rotateY(45deg) translateZ(20px);
		transform: translateX(-55%) rotateY(45deg) translateZ(20px);
	}
}


.no-csstransforms3d .nav-right.animate .feature-container {
	left: -75%;
}

.nav-right {

	[data-widget-type="extendednavigation"] .item-name {
		opacity: 0;
		-webkit-transform: translateX(100px) translateZ(-1000px);
		transform: translateX(100px) translateZ(-1000px);
		-webkit-transition: -webkit-transform 0.4s, opacity 0.4s;
		transition: transform 0.4s, opacity 0.4s;
	}

	&.animate [data-widget-type="extendednavigation"] .item-name {
		opacity: 1;
		-webkit-transform: translateX(0) translateZ(0);
		transform: translateX(0) translateZ(0);
	}
}



@media screen and (max-width: 31em), screen and (max-height: 36.2em) {
	 [data-widget-type="extendednavigation"].vertical {
		font-size: 1.2em;
		width: 6.8em;
	}

	 [data-widget-type="extendednavigation"].right {
		right: auto;
		left: 50%;
	}
}

@media screen and (max-height: 31.6em) {
	 [data-widget-type="extendednavigation"] a {
		margin-bottom: 20px;
	}
}